apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "edge-core.fullname" . }}
  labels:
    {{- include "edge-core.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "edge-core.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "edge-core.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "edge-core.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GRPC_PORT
              value: "{{ .Values.pod.grpcport }}"
            - name: HTTP_PORT
              value: "{{ .Values.pod.httpport }}"
            - name: DATABASE_CONNECTION_STRING
              value: "{{ .Values.pod.database.connection_string }}"
            - name: EDGE_CORE_DATABASE_NAME
              value: "{{ .Values.pod.database.name }}"
            - name: EDGE_CORE_DATABASE_COLLECTION_NAME
              value: "{{ .Values.pod.database.collection }}"
            - name: JWKS_URL
              value: "{{ .Values.pod.idp.jwksURL }}"
            - name: K3S_DOCKER_IMAGE
              value: "{{ .Values.pod.k3s.dockerImage }}"
          ports:
            - name: grpc
              containerPort: {{ .Values.pod.grpcport }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.pod.httpport }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
